#!/bin/bash

# how large an image do you want to process? 
# sample2.v is 290x442 pixels ... replicate this many times horizontally and 
# vertically to get a highres image for the benchmark
tile=10

# make a dir for our temp files
tmp=tmp
rm -rf $tmp
mkdir $tmp

# sample image is here
sample=images/sample2.v

echo building test image ...
echo "tile=$tile"
vips replicate $sample $tmp/t1.v 18 12
vips crop $tmp/t1.v $tmp/t2.v 0 0 5000 5000
if [ $? != 0 ]; then
  echo "build of test image failed -- out of disc space?"
  exit 1
fi
echo -n "test image is" $(vipsheader -f width $tmp/t2.v)
echo " by" $(vipsheader -f height $tmp/t2.v) "pixels"

echo make jpeg derivatives ...
vips copy $tmp/t2.v $tmp/t.jpg

# we want to use the time program, not the one built into the shell
time=$(which time)
if [ $? != 0 ]; then
  echo "unable to locate 'time' program"
  exit 1
fi

# run three times, take the fastest real time
function bestof3() {
  prg=$*

  t1=$($time -f %e $prg 2>&1)
  t2=$($time -f %e $prg 2>&1)
  t3=$($time -f %e $prg 2>&1)

  if [[ $t2 < $t1 ]]; then
	  t1=$t2
  fi
  if [[ $t3 < $t1 ]]; then
	  t1=$t3
  fi
  echo $t1
}

# find peak RSS
function maxmem() {
  prg=$*

  m=$($time -f %M $prg 2>&1)

  echo -n -e "$(basename $1)\t"
  echo $m
}

# run for jpg 
function benchmark() {
  prg=$1
  echo -n -e "$(basename $prg)\t"
  echo -n -e "$(bestof3 $prg $tmp/t.jpg $tmp/t2.jpg)\t"

  echo
}

# tests we run
programs="\
  ./vips.php
  ./imagick.php
  ./gd.php
"

rm -f $tmp/log

for prg in $programs; do
  echo -n timing $prg ...
  benchmark $prg >> $tmp/log
  echo " done"
done

rm -f $tmp/memlog
for prg in $programs; do
  echo -n measuring memuse for $prg ...
  maxmem $prg $tmp/t.jpg $tmp/t2.jpg >> $tmp/memlog
  echo " done"
done

echo 
echo real time in seconds, fastest of three runs
echo -e "benchmark\tjpeg"
sort -g -k 2 $tmp/log 

echo 
echo peak memory use in KB
echo -e "benchmark\tpeak RSS"
sort -g -k 2 $tmp/memlog 

rm -rf $tmp
